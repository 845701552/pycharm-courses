<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="StudySettings">
    <StudyTaskManager>
      <option name="course">
        <Course>
          <option name="adaptive" value="false" />
          <option name="authors">
            <list />
          </option>
          <option name="courseDirectory" value="$APPLICATION_CONFIG_DIR$/courses/Logging in Python-LoggingCC" />
          <option name="courseMode" value="Course Creator" />
          <option name="courseType" value="PyCharm" />
          <option name="description" value="This course provides an introduction to the standard Python logging module. It includes basic and advanced examples that can help you debug your Python software. Best practices are demonstrated to help you get the most out of Python logging. This course was tested using Python 2.7 and Python 3.4." />
          <option name="id" value="0" />
          <option name="language" value="Python" />
          <option name="lessons">
            <list>
              <Lesson>
                <option name="id" value="0" />
                <option name="index" value="1" />
                <option name="name" value="Basics" />
                <option name="updateDate" />
                <option name="taskList">
                  <list>
                    <Task>
                      <option name="index" value="1" />
                      <option name="name" value="Replacing print" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34277" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="replacing_print.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace function print with logging.debug" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="5" />
                                          <option name="offset" value="99" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="5" />
                                      <option name="offset" value="99" />
                                      <option name="possibleAnswer" value="logging.debug" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="print" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace function print with logging.debug" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="5" />
                                          <option name="offset" value="210" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="5" />
                                      <option name="offset" value="218" />
                                      <option name="possibleAnswer" value="logging.debug" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="print" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace function print with logging.debug" />
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="5" />
                                          <option name="offset" value="324" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="5" />
                                      <option name="offset" value="340" />
                                      <option name="possibleAnswer" value="logging.debug" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="print" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace function print with logging.debug" />
                                      <option name="index" value="3" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="5" />
                                          <option name="offset" value="436" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="5" />
                                      <option name="offset" value="460" />
                                      <option name="possibleAnswer" value="logging.debug" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="print" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace function print with logging.debug" />
                                      <option name="index" value="4" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="5" />
                                          <option name="offset" value="565" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="5" />
                                      <option name="offset" value="597" />
                                      <option name="possibleAnswer" value="logging.debug" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="print" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace function print with logging.debug" />
                                      <option name="index" value="5" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="5" />
                                          <option name="offset" value="611" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="5" />
                                      <option name="offset" value="651" />
                                      <option name="possibleAnswer" value="logging.debug" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="print" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="replacing_print.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;def get_current_rate(years):&#10;    print('Fetching current interest rate for %d years' % years)&#10;    rate = 7.5   # Stub external service call&#10;    print('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    print('Calling mortgage calculator')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    print('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    print('Calculated result is %f' % result)&#10;    print('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="2" />
                      <option name="name" value="Log output" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34278" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="log_output.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Pass a keyword argument of &quot;level&quot; and value of &quot;logging.DEBUG&quot;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="25" />
                                          <option name="offset" value="766" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="25" />
                                      <option name="offset" value="766" />
                                      <option name="possibleAnswer" value="level=logging.DEBUG" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="set default logging level" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="log_output.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;def get_current_rate(years):&#10;    logging.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 7.5   # Stub external service call&#10;    logging.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logging.debug('Calling mortgage calculator')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logging.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logging.debug('Calculated result is %f' % result)&#10;    logging.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(set default logging level)&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="3" />
                      <option name="name" value="Levels" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34279" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="levels.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Log an info level message using the info() method.&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="5" />
                                          <option name="offset" value="348" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="5" />
                                      <option name="offset" value="348" />
                                      <option name="possibleAnswer" value="info" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="debug" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Use the logging.warning method. Remember to pass a string argument.&#10;" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="34" />
                                          <option name="offset" value="413" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="34" />
                                      <option name="offset" value="412" />
                                      <option name="possibleAnswer" value="logging.warning(&quot;Term greater than 50 years&quot;)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="write_a_warning_message_to_logging" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="levels.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;def get_current_rate(years):&#10;    logging.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 7.5   # Stub external service call&#10;    logging.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logging.debug('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        write_a_warning_message_to_logging&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logging.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logging.debug('Calculated result is %f' % result)&#10;    logging.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="4" />
                      <option name="name" value="Loggers" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34280" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="loggers.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace with a call using the logger instance." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="7" />
                                          <option name="offset" value="139" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="7" />
                                      <option name="offset" value="139" />
                                      <option name="possibleAnswer" value="logger" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logging" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace with a call using the logger instance." />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="7" />
                                          <option name="offset" value="258" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="7" />
                                      <option name="offset" value="257" />
                                      <option name="possibleAnswer" value="logger" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logging" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace with a call using the logger instance." />
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="7" />
                                          <option name="offset" value="380" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="7" />
                                      <option name="offset" value="378" />
                                      <option name="possibleAnswer" value="logger" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logging" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace with a call using the logger instance." />
                                      <option name="index" value="3" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="7" />
                                          <option name="offset" value="452" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="7" />
                                      <option name="offset" value="449" />
                                      <option name="possibleAnswer" value="logger" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logging" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace with a call using the logger instance." />
                                      <option name="index" value="4" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="7" />
                                          <option name="offset" value="570" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="7" />
                                      <option name="offset" value="566" />
                                      <option name="possibleAnswer" value="logger" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logging" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace with a call using the logger instance." />
                                      <option name="index" value="5" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="7" />
                                          <option name="offset" value="707" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="7" />
                                      <option name="offset" value="702" />
                                      <option name="possibleAnswer" value="logger" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logging" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace with a call using the logger instance." />
                                      <option name="index" value="6" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="7" />
                                          <option name="offset" value="761" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="7" />
                                      <option name="offset" value="755" />
                                      <option name="possibleAnswer" value="logger" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logging" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="loggers.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logging.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 5.3   # Stub external service call&#10;    logging.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logging.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logging.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logging.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logging.debug('Calculated result is %f' % result)&#10;    logging.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="5" />
                      <option name="name" value="Multiple Loggers" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34281" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="multiple_loggers.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Look at the module level &quot;logger&quot; instance as an example, but shadow the logger variable with a new Logger instance with the name 'mortgage.rate'.&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="28" />
                                          <option name="offset" value="139" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="28" />
                                      <option name="offset" value="139" />
                                      <option name="possibleAnswer" value="logger = logging.getLogger('mortgage.rate')" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="create_a_new_logger_instance" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="multiple_loggers.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    create_a_new_logger_instance&#10;&#10;    logger.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f' % result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="6" />
                      <option name="name" value="log method" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34282" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="log_method.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logger.log(logging.DEBUG,&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="13" />
                                          <option name="offset" value="139" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="13" />
                                      <option name="offset" value="139" />
                                      <option name="possibleAnswer" value="logger.log(logging.DEBUG," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logger.debug(" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logger.log(logging.DEBUG,&#10;" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="13" />
                                          <option name="offset" value="257" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="13" />
                                      <option name="offset" value="269" />
                                      <option name="possibleAnswer" value="logger.log(logging.DEBUG," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logger.debug(" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logger.log(logging.INFO,&#10;" />
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="12" />
                                          <option name="offset" value="378" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="12" />
                                      <option name="offset" value="402" />
                                      <option name="possibleAnswer" value="logger.log(logging.INFO," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logger.info(" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logger.log(logging.WARNING,&#10;" />
                                      <option name="index" value="3" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="12" />
                                          <option name="offset" value="449" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="12" />
                                      <option name="offset" value="485" />
                                      <option name="possibleAnswer" value="logger.log(logging.WARNING," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logger.warn(" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logger.log(logging.DEBUG,&#10;" />
                                      <option name="index" value="4" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="13" />
                                          <option name="offset" value="566" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="13" />
                                      <option name="offset" value="617" />
                                      <option name="possibleAnswer" value="logger.log(logging.DEBUG," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logger.debug(" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logger.log(logging.DEBUG,&#10;" />
                                      <option name="index" value="5" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="13" />
                                          <option name="offset" value="702" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="13" />
                                      <option name="offset" value="765" />
                                      <option name="possibleAnswer" value="logger.log(logging.DEBUG," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logger.debug(" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logger.log(logging.DEBUG,&#10;" />
                                      <option name="index" value="6" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="13" />
                                          <option name="offset" value="755" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="13" />
                                      <option name="offset" value="830" />
                                      <option name="possibleAnswer" value="logger.log(logging.DEBUG," />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logger.debug(" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="log_method.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info(&quot;Calling mortgage calculator&quot;)&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug(&quot;Calculated result is %f&quot; % result)&#10;    logger.debug(&quot;Leaving mortgage calculator&quot;)&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="7" />
                      <option name="name" value="Special log levels" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34283" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="special_levels.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Use logging.NOTSET which is the lowest possible severity level.&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="13" />
                                          <option name="offset" value="875" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="13" />
                                      <option name="offset" value="875" />
                                      <option name="possibleAnswer" value="logging.NOTSET" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logging.DEBUG" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="special_levels.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f' % result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="8" />
                      <option name="name" value="Selective logging" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34284" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="selective_logging.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="The logger name is &quot;mortgage.rate&quot;&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="22" />
                                          <option name="offset" value="977" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="22" />
                                      <option name="offset" value="977" />
                                      <option name="possibleAnswer" value="'mortgage.rate'" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="specify name of logger" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="a level of logging.DEBUG will show all messages DEBUG level or higher" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="35" />
                                          <option name="offset" value="1026" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="35" />
                                      <option name="offset" value="1019" />
                                      <option name="possibleAnswer" value="logging.DEBUG" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="specify this loggers severity level" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="selective_logging.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger = logging.getLogger('mortgage.rate')&#10;&#10;    logger.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f' % result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.WARNING)&#10;    rate_logger = logging.getLogger(specify name of logger)&#10;    rate_logger.setLevel(specify this loggers severity level)&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                  </list>
                </option>
              </Lesson>
              <Lesson>
                <option name="id" value="0" />
                <option name="index" value="2" />
                <option name="name" value="Formatting" />
                <option name="updateDate" />
                <option name="taskList">
                  <list>
                    <Task>
                      <option name="index" value="1" />
                      <option name="name" value="Custom format string" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34285" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="custom_format_string.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="'%(asctime)s %(levelname)s %(message)s'" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="27" />
                                          <option name="offset" value="928" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="27" />
                                      <option name="offset" value="928" />
                                      <option name="possibleAnswer" value="'%(asctime)s %(levelname)s %(message)s'" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="insert custom format string" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="custom_format_string.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logging.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 5.3   # Stub external service call&#10;    logging.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logging.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logging.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logging.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logging.debug('Calculated result is %f' % result)&#10;    logging.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG,&#10;                        format=insert custom format string)&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="2" />
                      <option name="name" value="Custom datetime format" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34286" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="custom_datetime.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Use the string '%a %b %d %Y %I:%M:%S%p'&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="31" />
                                          <option name="offset" value="1002" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="31" />
                                      <option name="offset" value="1002" />
                                      <option name="possibleAnswer" value="%a %b %d %Y %I:%M:%S%p" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="insert format string codes here" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="custom_datetime.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logging.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 5.3   # Stub external service call&#10;    logging.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logging.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logging.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logging.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logging.debug('Calculated result is %f' % result)&#10;    logging.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG,&#10;                        format='%(asctime)s %(levelname)s %(message)s',&#10;                        datefmt='insert format string codes here')&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="3" />
                      <option name="name" value="LogRecord attributes" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34287" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="log_attributes.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="%(asctime)s %(levelname)s %(module)s %(funcName)s %(message)s&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="25" />
                                          <option name="offset" value="929" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="25" />
                                      <option name="offset" value="929" />
                                      <option name="possibleAnswer" value="%(asctime)s %(levelname)s %(module)s %(funcName)s %(message)s" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="insert_format_string_here" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="log_attributes.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logging.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 5.3   # Stub external service call&#10;    logging.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logging.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logging.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logging.debug('Number of monthly payments %d' % payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logging.debug('Calculated result is %f' % result)&#10;    logging.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG,&#10;                        format='insert_format_string_here')&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="4" />
                      <option name="name" value="Exceptions" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34288" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="log_exception.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace with call to logger.exception(). Don't forget to pass a message string.&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="4" />
                                          <option name="offset" value="825" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="4" />
                                      <option name="offset" value="825" />
                                      <option name="possibleAnswer" value="logger.exception('Exception occured')" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="pass" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="log_exception.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years' % years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f' % rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;    result = None&#10;    try:&#10;        if years &gt; 50:&#10;            logger.warn('Term greater than 50 years')&#10;&#10;        mon_rate = get_current_rate(years)/1200&#10;        payments = years * 12&#10;        logger.debug('Number of monthly payments %d' % payments)&#10;        result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;        logger.debug('Calculated result is %f' % result)&#10;    except:&#10;        pass&#10;&#10;    logging.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;    payment = get_monthly_payment(100000, 0)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="5" />
                      <option name="name" value="Logging objects" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34289" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="log_objects.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="the repr() function is used to call the __repr__ method of your class. Pass the object instance to repr()" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="3" />
                                          <option name="offset" value="647" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="3" />
                                      <option name="offset" value="646" />
                                      <option name="possibleAnswer" value="repr(obj)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="obj" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="log_objects.py" />
                                <option name="text" value="# This example shows logging objects&#10;#&#10;&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;class Mortgage(object):&#10;    def __init__(self, principal, rate, term):&#10;        self.principal = principal&#10;        self.rate = rate&#10;        self.term = term&#10;&#10;    def __str__(self):&#10;        return 'Mortgage principal %f for %f years at %f rate' % (&#10;            self.principal, self.term, self.rate)&#10;&#10;    def __repr__(self):&#10;        return 'Mortgage(%f, %f, %f)' % (self.principal, self.rate, self.term)&#10;&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;&#10;    obj = Mortgage(100000, 4.1, 15)&#10;    logger.debug('Created object: %s', obj)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="6" />
                      <option name="name" value="Limiting output" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34290" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="limit_output.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Call truncate(), for example: truncate(big_list, 30)" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="8" />
                                          <option name="offset" value="748" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="8" />
                                      <option name="offset" value="748" />
                                      <option name="possibleAnswer" value="truncate(big_list, 30)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="big_list" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="limit_output.py" />
                                <option name="text" value="import logging&#10;&#10;def truncate(obj, nlen):&#10;    &quot;&quot;&quot; Convert 'obj' to string and truncate if greater than length&quot;&quot;&quot;&#10;    str_value = str(obj)&#10;    if len(str_value) &gt; nlen:&#10;        return str_value[:nlen-3] + '...'&#10;    return str_value&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;&#10;    long_string = 'A' * 2000&#10;    logging.debug('something happened with value=%s', long_string)&#10;&#10;    # Truncate result (no ellipses)&#10;    logging.debug('something happened with value=%.10s', long_string)&#10;&#10;    # Create a large list&#10;    big_list = [1] * 2000&#10;&#10;    # Log the full list&#10;    logging.debug('something happened with the list=%s', big_list)&#10;&#10;    # Truncate result (with ellipses)&#10;    logging.debug('something happened with the list=%s', big_list)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="7" />
                      <option name="name" value="String formatting" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34291" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="string_formatting.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="See previous logging statement for the answer.&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="14" />
                                          <option name="offset" value="297" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="14" />
                                      <option name="offset" value="297" />
                                      <option name="possibleAnswer" value=", 'value'" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value=" % ('value', )" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="string_formatting.py" />
                                <option name="text" value="from __future__ import print_function&#10;import logging&#10;&#10;logger = logging.getLogger(__name__)&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.WARNING)&#10;&#10;    logging.debug('this message is not formatted; value=%s', 'value')&#10;&#10;    logging.debug('this message is not formatted; value=%s' % ('value', ))&#10;&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                  </list>
                </option>
              </Lesson>
              <Lesson>
                <option name="id" value="0" />
                <option name="index" value="3" />
                <option name="name" value="Basic Handlers" />
                <option name="updateDate" />
                <option name="taskList">
                  <list>
                    <Task>
                      <option name="index" value="1" />
                      <option name="name" value="Basic file handler" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34295" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="basic_file_handler.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="filename=log_filename&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="23" />
                                          <option name="offset" value="1032" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="23" />
                                      <option name="offset" value="1032" />
                                      <option name="possibleAnswer" value="filename=log_filename" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="setup_file_handler_here" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="basic_file_handler.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f', result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    log_filename = '../../Sandbox/basic_file.log'&#10;    logging.basicConfig(level=logging.DEBUG,&#10;                        format='%(asctime)s %(levelname)s %(message)s',&#10;                        setup_file_handler_here)&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="2" />
                      <option name="name" value="Basic truncate log file" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34296" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="new_log_files.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="This is similar to the open() function. &quot;w&quot; can be used to create a new file, overwriting any existing file." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="27" />
                                          <option name="offset" value="1057" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="27" />
                                      <option name="offset" value="1057" />
                                      <option name="possibleAnswer" value="w" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="insert create new file mode" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="new_log_files.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f', result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG,&#10;                        format='%(asctime)s %(levelname)s %(message)s',&#10;                        filename='../../Sandbox/basic_file.log',&#10;                        filemode='insert create new file mode')&#10;&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="3" />
                      <option name="name" value="Create file handler" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34297" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="file_handler.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logging.FileHandler(log_filename)" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="25" />
                                          <option name="offset" value="1108" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="25" />
                                      <option name="offset" value="1108" />
                                      <option name="possibleAnswer" value="logging.FileHandler(log_filename)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="create FileHandler object" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="addHandler() takes a handler and adds it to the list of handlers for a Logger." />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="1189" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="21" />
                                      <option name="offset" value="1197" />
                                      <option name="possibleAnswer" value="addHandler" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="add handler to logger" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="file_handler.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f', result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    # logging.basicConfig(level=logging.DEBUG,&#10;    #                     format='%(asctime)s %(levelname)s %(message)s',&#10;    #                     filename='../../Sandbox/basic_file.log')&#10;&#10;    log_filename = '../../Sandbox/create_file_handler.log'&#10;    file_handler = create FileHandler object&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.add handler to logger(file_handler)&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="4" />
                      <option name="name" value="Set formatter" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34298" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="set_formatter.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="%(asctime)s %(levelname)s %(message)s" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="57" />
                                          <option name="offset" value="1180" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="57" />
                                      <option name="offset" value="1180" />
                                      <option name="possibleAnswer" value="%(asctime)s %(levelname)s %(message)s" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="enter same format string as used in basicConfig() example" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="setFormatter(fmt) sets or replaces the existing formatter attached to the FileHandler object." />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="43" />
                                          <option name="offset" value="1257" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="43" />
                                      <option name="offset" value="1237" />
                                      <option name="possibleAnswer" value="setFormatter(fmt)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="set the formatter on the FileHandler object" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="set_formatter.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f', result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    # logging.basicConfig(level=logging.DEBUG,&#10;    #                     format='%(asctime)s %(levelname)s %(message)s',&#10;    #                     filename='../../Sandbox/basic_file.log')&#10;&#10;    log_filename = '../../Sandbox/file_handler_with_formatter.log'&#10;    file_handler = logging.FileHandler(log_filename)&#10;&#10;    fmt = logging.Formatter('enter same format string as used in basicConfig() example')&#10;    file_handler.set the formatter on the FileHandler object&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.addHandler(file_handler)&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="5" />
                      <option name="name" value="Multiple handlers" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34299" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="multiple_handlers.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logging.StreamHandler" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="32" />
                                          <option name="offset" value="1171" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="32" />
                                      <option name="offset" value="1171" />
                                      <option name="possibleAnswer" value="logging.StreamHandler" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="specify the stream handler class" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="stdout_handler.setFormatter(fmt)" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="50" />
                                          <option name="offset" value="1220" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="50" />
                                      <option name="offset" value="1209" />
                                      <option name="possibleAnswer" value="stdout_handler.setFormatter(fmt)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="use the existing formatter with the stdout_handler" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="stdout_handler" />
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="23" />
                                          <option name="offset" value="1298" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="23" />
                                      <option name="offset" value="1269" />
                                      <option name="possibleAnswer" value="stdout_handler" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="pass the handler object" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="multiple_handlers.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import sys&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f', result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    log_filename = '../../Sandbox/create_file_handler.log'&#10;    file_handler = logging.FileHandler(log_filename)&#10;&#10;    fmt = logging.Formatter('%(asctime)s %(levelname)s %(message)s')&#10;    file_handler.setFormatter(fmt)&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.addHandler(file_handler)&#10;&#10;    stdout_handler = specify the stream handler class(sys.stdout)&#10;    use the existing formatter with the stdout_handler&#10;    root_logger.addHandler(pass the handler object)&#10;&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="6" />
                      <option name="name" value="Separate handler log levels" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34300" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="separate_levels.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="setLevel(logging.WARNING)" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="17" />
                                          <option name="offset" value="1264" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="17" />
                                      <option name="offset" value="1264" />
                                      <option name="possibleAnswer" value="setLevel(logging.WARNING)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="set handler level" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="separate_levels.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import sys&#10;import logging&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logging.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logging.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logging.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logging.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logging.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logging.debug('Calculated result is %f', result)&#10;    logging.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    log_filename = '../../Sandbox/separate_levels.log'&#10;    file_handler = logging.FileHandler(log_filename)&#10;&#10;    fmt = logging.Formatter('%(asctime)s %(levelname)s %(message)s')&#10;    file_handler.setFormatter(fmt)&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.addHandler(file_handler)&#10;&#10;    stdout_handler = logging.StreamHandler(sys.stdout)&#10;    stdout_handler.setFormatter(fmt)&#10;    stdout_handler.set handler level&#10;    root_logger.addHandler(stdout_handler)&#10;&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                  </list>
                </option>
              </Lesson>
              <Lesson>
                <option name="id" value="0" />
                <option name="index" value="4" />
                <option name="name" value="Advanced Handlers" />
                <option name="updateDate" />
                <option name="taskList">
                  <list>
                    <Task>
                      <option name="index" value="1" />
                      <option name="name" value="Rotating files" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34313" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="rotating_log_files.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logging.handlers" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="52" />
                                          <option name="offset" value="72" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="52" />
                                      <option name="offset" value="72" />
                                      <option name="possibleAnswer" value="logging.handlers" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="specify the module that contains RotatingFileHandler" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logging.handlers.RotatingFileHandler" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="45" />
                                          <option name="offset" value="1006" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="45" />
                                      <option name="offset" value="970" />
                                      <option name="possibleAnswer" value="logging.handlers.RotatingFileHandler" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="fully qualified name of rotating file handler" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="rotating_log_files.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;import specify the module that contains RotatingFileHandler&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f', result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    log_filename = '../../Sandbox/rotating.log'&#10;    max_files=2&#10;    max_file_size=100&#10;    file_handler = fully qualified name of rotating file handler(log_filename,&#10;                                                        mode='a',&#10;                                                        maxBytes=max_file_size,&#10;                                                        backupCount=max_files)&#10;&#10;    fmt = logging.Formatter('%(asctime)s %(levelname)s %(message)s')&#10;    file_handler.setFormatter(fmt)&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.addHandler(file_handler)&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="2" />
                      <option name="name" value="Rotating files by time" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34314" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="timed_rotation.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="For seconds you should specify 'S'" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="16" />
                                          <option name="offset" value="1352" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="16" />
                                      <option name="offset" value="1352" />
                                      <option name="possibleAnswer" value="'S'" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="type of interval" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="For this task, use 2" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="1440" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="21" />
                                      <option name="offset" value="1427" />
                                      <option name="possibleAnswer" value="2" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="frequency of rollover" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="timed_rotation.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import time&#10;import logging&#10;import logging.handlers&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;&#10;class DelayFilterer(logging.Filter):&#10;    &quot;&quot;&quot; Logging filter which inserts a delay between each log record &quot;&quot;&quot;&#10;    def __init__(self, delay_secs=1):&#10;        self.delay_secs = delay_secs&#10;    def filter(self, record):&#10;        time.sleep(self.delay_secs)&#10;        return True&#10;&#10;def get_current_rate(years):&#10;    logging.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logging.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logging.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logging.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logging.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logging.debug('Calculated result is %f', result)&#10;    logging.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    log_filename = '../../Sandbox/timed_rotation.log'&#10;    file_handler = logging.handlers.TimedRotatingFileHandler(log_filename,&#10;                                                             when=type of interval,&#10;                                                             interval=frequency of rollover,&#10;                                                             backupCount=4)&#10;&#10;    fmt = logging.Formatter('%(asctime)s %(levelname)s %(message)s')&#10;    file_handler.setFormatter(fmt)&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.addHandler(file_handler)&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    # Custom filter to place a 1 second delay between each log message&#10;    root_logger.addFilter(DelayFilterer(delay_secs=1))&#10;&#10;    payment = get_monthly_payment(100000, 80)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="3" />
                      <option name="name" value="Memory handler" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34315" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="memory_handler.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="The instance is in the 'file_handler' variable." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="26" />
                                          <option name="offset" value="1265" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="26" />
                                      <option name="offset" value="1265" />
                                      <option name="possibleAnswer" value="file_handler" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="use the FileHandler object" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="memory_handler.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;import logging.handlers&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    result = None&#10;    try:&#10;        mon_rate = get_current_rate(years)/1200&#10;        payments = years * 12&#10;        logger.debug('Number of monthly payments %d', payments)&#10;        result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;        logger.debug('Calculated result is %f', result)&#10;    except:&#10;        logger.exception('caught exception')&#10;&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;&#10;    log_filename = '../../Sandbox/memory_handler.log'&#10;    file_handler = logging.FileHandler(log_filename, mode='w')&#10;&#10;    fmt = logging.Formatter('%(asctime)s %(levelname)s %(message)s')&#10;    file_handler.setFormatter(fmt)&#10;&#10;    memory_handler = logging.handlers.MemoryHandler(capacity=2, target=use the FileHandler object)&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.addHandler(memory_handler)&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    payment = get_monthly_payment(100000, 0)&#10;    print('Monthly payment is %s' % payment)&#10;&#10;    # Remove file handler target to prevent logging.shutdown() from explicitly&#10;    # flushing all handlers, causing any recent DEBUG output to be written&#10;    # to the FileHandler.&#10;    memory_handler.setTarget(None)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="4" />
                      <option name="name" value="HTTP handler" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34316" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="http_handler.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="HTTPHandler" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="20" />
                                          <option name="offset" value="1184" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="20" />
                                      <option name="offset" value="1184" />
                                      <option name="possibleAnswer" value="HTTPHandler" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="name of http handler" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="127.0.0.1:8080" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="19" />
                                          <option name="offset" value="1220" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="19" />
                                      <option name="offset" value="1211" />
                                      <option name="possibleAnswer" value="127.0.0.1:8080" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter host and port" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Use &quot;/&quot; for this simple example. Typically you would specify a URL endpoint that can process your log data." />
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="13" />
                                          <option name="offset" value="1286" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="13" />
                                      <option name="offset" value="1272" />
                                      <option name="possibleAnswer" value="/" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter the url" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="http_handler.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;import logging.handlers&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    result = None&#10;    try:&#10;        mon_rate = get_current_rate(years)/1200&#10;        payments = years * 12&#10;        logger.debug('Number of monthly payments %d', payments)&#10;        result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;        logger.debug('Calculated result is %f', result)&#10;    except:&#10;        logger.exception('caught exception')&#10;&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;&#10;    file_handler = logging.FileHandler('memory_handler.log', mode='w')&#10;&#10;    fmt = logging.Formatter('%(asctime)s %(levelname)s %(message)s')&#10;    file_handler.setFormatter(fmt)&#10;&#10;    http_handler = logging.handlers.name of http handler(host='127.0.0.1enter host and port                                          url='enter the url',&#10;                                                method='GET')&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.addHandler(http_handler)&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="5" />
                      <option name="name" value="shutdown" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34317" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="logging_shutdown.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logging.shutdown() can be used to gracefully shutdown the logging system." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="49" />
                                          <option name="offset" value="1713" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="49" />
                                      <option name="offset" value="1713" />
                                      <option name="possibleAnswer" value="logging.shutdown()" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="insert call to gracefully shutdown logging system" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="logging_shutdown.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;import logging.handlers&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    result = None&#10;    try:&#10;        mon_rate = get_current_rate(years)/1200&#10;        payments = years * 12&#10;        logger.debug('Number of monthly payments %d', payments)&#10;        result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;        logger.debug('Calculated result is %f', result)&#10;    except:&#10;        logger.exception('caught exception')&#10;&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;&#10;    log_filename = '../../Sandbox/memory_handler.log'&#10;    file_handler = logging.FileHandler(log_filename, mode='w')&#10;&#10;    fmt = logging.Formatter('%(asctime)s %(levelname)s %(message)s')&#10;    file_handler.setFormatter(fmt)&#10;&#10;    memory_handler = logging.handlers.MemoryHandler(capacity=2, target=file_handler)&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.addHandler(memory_handler)&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    payment = get_monthly_payment(100000, 0)&#10;    print('Monthly payment is %s' % payment)&#10;&#10;    # Remove file handler target to prevent logging.shutdown() from explicitly&#10;    # flushing all handlers, causing any recent DEBUG output to be written&#10;    # to the FileHandler.&#10;    memory_handler.setTarget(None)&#10;&#10;    insert call to gracefully shutdown logging system" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="6" />
                      <option name="name" value="Removing handlers" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34318" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="remove_handler.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="'A.B'" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="21" />
                                          <option name="offset" value="583" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="21" />
                                      <option name="offset" value="583" />
                                      <option name="possibleAnswer" value="'A.B'" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter the logger name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="b_log.removeHandler(handler)" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="45" />
                                          <option name="offset" value="727" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="45" />
                                      <option name="offset" value="711" />
                                      <option name="possibleAnswer" value="b_log.removeHandler(handler)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="insert code to remove handler from A.B logger" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="remove_handler.py" />
                                <option name="text" value="import logging&#10;&#10;def setup_loggers():&#10;    stream_handler = logging.StreamHandler()&#10;    fmt = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')&#10;    stream_handler.setFormatter(fmt)&#10;&#10;    root = logging.getLogger()&#10;    root.addHandler(stream_handler)&#10;    #root.setLevel(logging.DEBUG)&#10;&#10;    b_log = logging.getLogger('A.B')&#10;    b_log.addHandler(stream_handler)&#10;&#10;&#10;if __name__ == '__main__':&#10;    setup_loggers()&#10;&#10;    c_log = logging.getLogger('A.B.C')&#10;    c_log.warn('This message should be output once to console (but is output twice instead)')&#10;&#10;    b_log = logging.getLogger(enter the logger name)&#10;&#10;    # Remove all handlers attached to logger&#10;    while len(b_log.handlers):&#10;        handler = b_log.handlers[0]&#10;        insert code to remove handler from A.B logger&#10;&#10;    c_log.warn('This message should be output once to console')&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                  </list>
                </option>
              </Lesson>
              <Lesson>
                <option name="id" value="0" />
                <option name="index" value="5" />
                <option name="name" value="Filtering" />
                <option name="updateDate" />
                <option name="taskList">
                  <list>
                    <Task>
                      <option name="index" value="1" />
                      <option name="name" value="Filter object" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34301" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="filter.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="addFilter(log_filter)" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="36" />
                                          <option name="offset" value="176" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="36" />
                                      <option name="offset" value="176" />
                                      <option name="possibleAnswer" value="addFilter(log_filter)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="add the filter object to this logger" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="addFilter(log_filter)" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="36" />
                                          <option name="offset" value="316" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="36" />
                                      <option name="offset" value="301" />
                                      <option name="possibleAnswer" value="addFilter(log_filter)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="add the filter object to this logger" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="addFilter(log_filter)" />
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="36" />
                                          <option name="offset" value="454" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="36" />
                                      <option name="offset" value="424" />
                                      <option name="possibleAnswer" value="addFilter(log_filter)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="add the filter object to this logger" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="filter.py" />
                                <option name="text" value="import logging&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;&#10;    log_filter = logging.Filter('A')&#10;&#10;    logger1 = logging.getLogger('A')&#10;    logger1.add the filter object to this logger&#10;    logger1.debug('This is written to log output')&#10;&#10;    logger2 = logging.getLogger('A.B')&#10;    logger2.add the filter object to this logger&#10;    logger2.debug('This is written to log output')&#10;&#10;    logger3 = logging.getLogger('B')&#10;    logger3.add the filter object to this logger&#10;    logger3.debug('This is NOT written to log output, because only names start with &quot;B&quot; are allowed by filter')&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="2" />
                      <option name="name" value="Sanitize filter" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34302" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="sanitize_filter.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="The value should be non-zero, since we are only updating the data and excluding any log records.&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="35" />
                                          <option name="offset" value="448" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="35" />
                                      <option name="offset" value="448" />
                                      <option name="possibleAnswer" value="2" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="insert the appropriate return value" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="call the method 'addHandler' on the root logger instance and pass in the sanitize_filter object." />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="635" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="40" />
                                      <option name="offset" value="601" />
                                      <option name="possibleAnswer" value="root.addFilter(sanitize_filter)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="add the filter object to the root logger" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="sanitize_filter.py" />
                                <option name="text" value="import logging&#10;import re&#10;&#10;class SanitizeSSNFilter(logging.Filter):&#10;    def filter(self, record):&#10;        def replace_ssn(value):&#10;            return re.sub('\d\d\d-\d\d-\d\d\d\d', 'XXX-XX-XXXX', value)&#10;&#10;        record.msg = replace_ssn(record.msg)&#10;        if record.args:&#10;            newargs = [replace_ssn(arg) if isinstance(arg, str)&#10;                       else arg for arg in record.args]&#10;            record.args = tuple(newargs)&#10;&#10;        return insert the appropriate return value&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;&#10;    sanitize_filter = SanitizeSSNFilter()&#10;    root = logging.getLogger()&#10;    add the filter object to the root logger&#10;&#10;    root.debug('Nothing filtered here; user_id=%s', '100')&#10;    root.debug('Log message containing a SSN=000-01-1000')&#10;    root.warn('Log message containing a SSN=%s', '000-01-1001')&#10;    root.debug('Log message containing a SSN=%s' % '000-01-1100')&#10;    root.info('Log event: user_id=%s, SSN=%s, status=%d, result=%s', '100', '000-01-1100', 2, True)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="3" />
                      <option name="name" value="Logger propagate" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34303" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="propagate1.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Setting a False value will disable propagation to parent handlers." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="42" />
                                          <option name="offset" value="368" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="42" />
                                      <option name="offset" value="368" />
                                      <option name="possibleAnswer" value="0" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="disable log propagation to parent handlers" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="propagate1.py" />
                                <option name="text" value="import logging&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;&#10;    log_filter = logging.Filter('A')&#10;&#10;    logger1 = logging.getLogger('A')&#10;    logger1.debug('This is written to log output')&#10;&#10;    logger2 = logging.getLogger('A.B')&#10;    logger2.debug('This is written to log output')&#10;&#10;    logger3 = logging.getLogger('B')&#10;    logger3.propagate = disable log propagation to parent handlers&#10;    logger3.debug('This is NOT written to log output, because only names start with &quot;B&quot; are allowed by filter')&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="4" />
                      <option name="name" value="NullHandler" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34304" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="null_handler.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logger3.addHandler(logging.NullHandler())" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="29" />
                                          <option name="offset" value="348" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="29" />
                                      <option name="offset" value="348" />
                                      <option name="possibleAnswer" value="logger3.addHandler(logging.NullHandler())" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="add a null handler to logger3" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="null_handler.py" />
                                <option name="text" value="import logging&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;&#10;    log_filter = logging.Filter('A')&#10;&#10;    logger1 = logging.getLogger('A')&#10;    logger1.debug('This is written to log output')&#10;&#10;    logger2 = logging.getLogger('A.B')&#10;    logger2.debug('This is written to log output')&#10;&#10;    logger3 = logging.getLogger('B')&#10;    add a null handler to logger3&#10;    logger3.propagate = False&#10;    logger3.debug('This is NOT written to log output, because only names start with &quot;B&quot; are allowed by filter')&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="5" />
                      <option name="name" value="Filtering on handler" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34305" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="filtering_handler.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="logging.getLogger()" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="19" />
                                          <option name="offset" value="138" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="19" />
                                      <option name="offset" value="138" />
                                      <option name="possibleAnswer" value="logging.getLogger()" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="get the root logger" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="handler.addFilter(log_filter)" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="30" />
                                          <option name="offset" value="200" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="30" />
                                      <option name="offset" value="200" />
                                      <option name="possibleAnswer" value="handler.addFilter(log_filter)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="add the filter to each handler" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="filtering_handler.py" />
                                <option name="text" value="import logging&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;&#10;    log_filter = logging.Filter('A')&#10;&#10;    root = get the root logger&#10;    for handler in root.handlers:&#10;        add the filter to each handler&#10;&#10;    logger1 = logging.getLogger('A')&#10;    logger1.debug('This is written to log output')&#10;&#10;    logger2 = logging.getLogger('A.B')&#10;    logger2.debug('This is written to log output')&#10;&#10;    logger3 = logging.getLogger('B')&#10;    logger3.debug('This is NOT written to log output, because only names start with &quot;B&quot; are allowed by filter')&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                  </list>
                </option>
              </Lesson>
              <Lesson>
                <option name="id" value="0" />
                <option name="index" value="6" />
                <option name="name" value="Configuration" />
                <option name="updateDate" />
                <option name="taskList">
                  <list>
                    <Task>
                      <option name="index" value="1" />
                      <option name="name" value="fileConfig formatters" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34319" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="file_config_formatters.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="formatter1&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="39" />
                                          <option name="offset" value="69" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="39" />
                                      <option name="offset" value="69" />
                                      <option name="possibleAnswer" value="formatter1" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter a name for a new formatter object" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="formatter1&#10;" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="27" />
                                          <option name="offset" value="168" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="27" />
                                      <option name="offset" value="139" />
                                      <option name="possibleAnswer" value="formatter1" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="add the formatter name here" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="file_config_formatters.py" />
                                <option name="text" value="import logging&#10;import logging.config&#10;&#10;config = &quot;&quot;&quot;&#10;[formatters]&#10;keys=enter a name for a new formatter object&#10;&#10;[handlers]&#10;keys=handler1&#10;&#10;[loggers]&#10;keys=root&#10;&#10;[formatter_add the formatter name here]&#10;format=%(asctime)s %(levelname)s %(message)s&#10;&#10;[handler_handler1]&#10;class=StreamHandler&#10;args=()&#10;formatter=formatter1&#10;&#10;[logger_root]&#10;handlers=handler1&#10;level=DEBUG&#10;&quot;&quot;&quot;&#10;&#10;config_filename = 'logging.ini'&#10;&#10;def write_config_file(filename, data):&#10;    with open(filename, 'w') as fp:&#10;        fp.write(data)&#10;&#10;&#10;if __name__ == '__main__':&#10;    write_config_file(config_filename, config)&#10;&#10;    logging.config.fileConfig(config_filename)&#10;&#10;    logging.debug('this is a debug message')&#10;    logging.warning('this is a warning message')" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="2" />
                      <option name="name" value="fileConfig handlers" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34320" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="file_config_handlers.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="handler1" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="97" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="40" />
                                      <option name="offset" value="97" />
                                      <option name="possibleAnswer" value="handler1" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter instance name for a handler object" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="handler1" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="238" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="40" />
                                      <option name="offset" value="206" />
                                      <option name="possibleAnswer" value="handler1" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter instance name for a handler object" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="file_config_handlers.py" />
                                <option name="text" value="import logging&#10;import logging.config&#10;&#10;config = &quot;&quot;&quot;&#10;[formatters]&#10;keys=formatter1&#10;&#10;[handlers]&#10;keys=enter instance name for a handler object&#10;&#10;[loggers]&#10;keys=root&#10;&#10;[formatter_formatter1]&#10;format=%(asctime)s %(levelname)s %(message)s&#10;&#10;[handler_enter instance name for a handler object]&#10;class=StreamHandler&#10;args=()&#10;formatter=formatter1&#10;&#10;[logger_root]&#10;handlers=handler1&#10;level=DEBUG&#10;&quot;&quot;&quot;&#10;&#10;config_filename = 'logging.ini'&#10;&#10;def write_config_file(filename, data):&#10;    with open(filename, 'w') as fp:&#10;        fp.write(data)&#10;&#10;&#10;if __name__ == '__main__':&#10;    write_config_file(config_filename, config)&#10;&#10;    logging.config.fileConfig(config_filename)&#10;&#10;    logging.debug('this is a debug message')&#10;    logging.warning('this is a warning message')" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="3" />
                      <option name="name" value="fileConfig loggers" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34321" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="file_config_loggers.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="root" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="31" />
                                          <option name="offset" value="122" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="31" />
                                      <option name="offset" value="122" />
                                      <option name="possibleAnswer" value="root" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter root logger instance name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="root" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="34" />
                                          <option name="offset" value="301" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="34" />
                                      <option name="offset" value="274" />
                                      <option name="possibleAnswer" value="root" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter name of root logger instance" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="handler1" />
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="30" />
                                          <option name="offset" value="346" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="30" />
                                      <option name="offset" value="289" />
                                      <option name="possibleAnswer" value="handler1" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter name of handler instance" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="file_config_loggers.py" />
                                <option name="text" value="import logging&#10;import logging.config&#10;&#10;config = &quot;&quot;&quot;&#10;[formatters]&#10;keys=formatter1&#10;&#10;[handlers]&#10;keys=handler1&#10;&#10;[loggers]&#10;keys=enter root logger instance name&#10;&#10;[formatter_formatter1]&#10;format=%(asctime)s %(levelname)s %(message)s&#10;&#10;[handler_handler1]&#10;class=StreamHandler&#10;args=()&#10;formatter=formatter1&#10;&#10;[logger_enter name of root logger instance]&#10;handlers=enter name of handler instance&#10;level=DEBUG&#10;&quot;&quot;&quot;&#10;&#10;config_filename = 'logging.ini'&#10;&#10;def write_config_file(filename, data):&#10;    with open(filename, 'w') as fp:&#10;        fp.write(data)&#10;&#10;&#10;if __name__ == '__main__':&#10;    write_config_file(config_filename, config)&#10;&#10;    logging.config.fileConfig(config_filename)&#10;&#10;    logging.debug('this is a debug message')&#10;    logging.warning('this is a warning message')" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="4" />
                      <option name="name" value="fileConfig multiple handlers" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34322" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="file_config_multiple_handlers.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="file" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="32" />
                                          <option name="offset" value="128" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="32" />
                                      <option name="offset" value="128" />
                                      <option name="possibleAnswer" value="file" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter file handler instance name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="32" />
                                          <option name="offset" value="309" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="32" />
                                      <option name="offset" value="281" />
                                      <option name="possibleAnswer" value="file" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter file handler instance name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="file" />
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="32" />
                                          <option name="offset" value="465" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="32" />
                                      <option name="offset" value="409" />
                                      <option name="possibleAnswer" value="file" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter file handler instance name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="file_config_multiple_handlers.py" />
                                <option name="text" value="import logging&#10;import logging.config&#10;&#10;config = &quot;&quot;&quot;&#10;[loggers]&#10;keys=root&#10;&#10;[formatters]&#10;keys=formatter1&#10;&#10;[handlers]&#10;keys=handler1, enter file handler instance name&#10;&#10;[formatter_formatter1]&#10;format=%(asctime)s %(levelname)s %(message)s&#10;&#10;[handler_handler1]&#10;class=StreamHandler&#10;args=()&#10;formatter=formatter1&#10;&#10;[handler_enter file handler instance name]&#10;class=FileHandler&#10;args=(&quot;../../Sandbox/file_config_example.log&quot;, )&#10;formatter=formatter1&#10;&#10;[logger_root]&#10;handlers=handler1, enter file handler instance name&#10;level=DEBUG&#10;&quot;&quot;&quot;&#10;&#10;config_filename = 'logging.ini'&#10;&#10;def write_config_file(filename, data):&#10;    with open(filename, 'w') as fp:&#10;        fp.write(data)&#10;&#10;&#10;if __name__ == '__main__':&#10;    write_config_file(config_filename, config)&#10;&#10;    logging.config.fileConfig(config_filename)&#10;&#10;    logging.debug('this is a debug message')&#10;    logging.warning('this is a warning message')" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="5" />
                      <option name="name" value="dictConfig" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34323" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="dict_config.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="The 'handlers' section contains a key called 'console', that is the name of the stream handler." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="40" />
                                          <option name="offset" value="605" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="40" />
                                      <option name="offset" value="605" />
                                      <option name="possibleAnswer" value="console" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="insert name of stream handler object key" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="The variable named &quot;log_config&quot; contains our logging configuration." />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="49" />
                                          <option name="offset" value="711" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="49" />
                                      <option name="offset" value="678" />
                                      <option name="possibleAnswer" value="log_config" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="pass the dict object containing log configuration" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="dict_config.py" />
                                <option name="text" value="import logging&#10;import logging.config&#10;&#10;logger = logging.getLogger(__name__)&#10;&#10;if __name__ == '__main__':&#10;    log_config = {&#10;        'version': 1,&#10;        'handlers': {&#10;            'console': {&#10;                'class': 'logging.StreamHandler',&#10;                'formatter': 'formatter1',&#10;                'stream': 'ext://sys.stdout'&#10;            }&#10;&#10;        },&#10;        'formatters': {&#10;            'formatter1': {&#10;                'format': '%(asctime)s - %(levelname)s - %(message)s'&#10;            }&#10;        },&#10;        'loggers': {&#10;            '': {&#10;                'level': 'DEBUG',&#10;                'handlers': ['insert name of stream handler object key', ]&#10;            }&#10;        }&#10;    }&#10;&#10;    logging.config.dictConfig(pass the dict object containing log configuration)&#10;&#10;    logger.warn('This is a warning')&#10;    logger.debug('test')&#10;&#10;    logging.root.warn('This is a root logger warning')" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="6" />
                      <option name="name" value="dictConfig existing loggers" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34324" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="dict_config_existing_loggers.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="The option 'disable_existing_loggers' can be used to override what happens to existing loggers. The default value is &quot;True&quot;." />
                                      <option name="index" value="0" />
                                      <option name="initialState" />
                                      <option name="length" value="21" />
                                      <option name="offset" value="651" />
                                      <option name="possibleAnswer" value="disable_existing_loggers" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="insert name of option" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Since we do not want to disable existing loggers, the value should be &quot;False&quot;." />
                                      <option name="index" value="1" />
                                      <option name="initialState" />
                                      <option name="length" value="19" />
                                      <option name="offset" value="678" />
                                      <option name="possibleAnswer" value="False" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="insert option value" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="dict_config_existing_loggers.py" />
                                <option name="text" value="import logging&#10;import logging.config&#10;&#10;logger = logging.getLogger(__name__)&#10;&#10;if __name__ == '__main__':&#10;    log_config = {&#10;        'version': 1,&#10;        'handlers': {&#10;            'console': {&#10;                'class': 'logging.StreamHandler',&#10;                'formatter': 'formatter1',&#10;                'stream': 'ext://sys.stdout'&#10;            }&#10;&#10;        },&#10;        'formatters': {&#10;            'formatter1': {&#10;                'format': '%(asctime)s - %(levelname)s - %(message)s'&#10;            }&#10;        },&#10;        'loggers': {&#10;            '': {&#10;                'level': 'DEBUG',&#10;                'handlers': ['console', ]&#10;            }&#10;        },&#10;        'insert name of optioninsert option valuelse&#10;    }&#10;&#10;    logging.config.dictConfig(log_config)&#10;&#10;    logger.warn('This is a warning')&#10;    logger.debug('test')&#10;&#10;    logging.root.warn('This is a root logger warning')" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="7" />
                      <option name="name" value="dictConfig root shortcut" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34325" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="dict_config_root.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="'root' identifies the root logger." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="25" />
                                          <option name="offset" value="554" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="25" />
                                      <option name="offset" value="554" />
                                      <option name="possibleAnswer" value="root" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter name of root logger" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="dict_config_root.py" />
                                <option name="text" value="import logging&#10;import logging.config&#10;&#10;logger = logging.getLogger(__name__)&#10;&#10;if __name__ == '__main__':&#10;    log_config = {&#10;        'version': 1,&#10;        'disable_existing_loggers': False,&#10;        'handlers': {&#10;            'console': {&#10;                'class': 'logging.StreamHandler',&#10;                'formatter': 'formatter1',&#10;                'stream': 'ext://sys.stdout'&#10;            }&#10;&#10;        },&#10;        'formatters': {&#10;            'formatter1': {&#10;                'format': '%(asctime)s - %(levelname)s - %(message)s'&#10;            }&#10;        },&#10;        'enter name of root logger': {&#10;            'level': 'DEBUG',&#10;            'handlers': ['console', ]&#10;        }&#10;    }&#10;&#10;    logging.config.dictConfig(log_config)&#10;&#10;    logger.warn('This is a warning')&#10;    logger.debug('test')&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                  </list>
                </option>
              </Lesson>
              <Lesson>
                <option name="id" value="0" />
                <option name="index" value="7" />
                <option name="name" value="Customization" />
                <option name="updateDate" />
                <option name="taskList">
                  <list>
                    <Task>
                      <option name="index" value="1" />
                      <option name="name" value="JSON Formatter" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34306" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="json_formatter.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Call handler.setFormatter() passing the formatter object." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="32" />
                                          <option name="offset" value="760" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="32" />
                                      <option name="offset" value="760" />
                                      <option name="possibleAnswer" value="handler.setFormatter(fmt)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="add the formatter to the handler" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="json_formatter.py" />
                                <option name="text" value="import logging&#10;import json&#10;import datetime&#10;import traceback&#10;&#10;class JsonFormatter(logging.Formatter):&#10;    def format(self, record):&#10;        if record.exc_info:&#10;            exc = traceback.format_exception(*record.exc_info)&#10;        else:&#10;            exc = None&#10;&#10;        return json.dumps({&#10;            'msg': record.msg % record.args,&#10;            'timestamp': datetime.datetime.utcfromtimestamp(record.created).isoformat() + 'Z',&#10;            'func': record.funcName,&#10;            'level': record.levelname,&#10;            'module': record.module,&#10;            'process_id': record.process,&#10;            'thread_id': record.thread,&#10;            'exception': exc&#10;        })&#10;&#10;if __name__ == '__main__':&#10;    handler = logging.StreamHandler()&#10;&#10;    fmt = JsonFormatter()&#10;    add the formatter to the handler&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.setLevel(logging.DEBUG)&#10;    root_logger.addHandler(handler)&#10;&#10;    try:&#10;        raise Exception('This is an exception')&#10;    except:&#10;        root_logger.exception('caught exception')&#10;&#10;    root_logger.warn('this is a test message')&#10;    root_logger.debug('this request_id=%d name=%s', 1, 'John')&#10;&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="2" />
                      <option name="name" value="Smart memory handler" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34307" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="smart_memory_handler.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="SmartMemoryHandler(capacity=2, target=file_handler)" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="49" />
                                          <option name="offset" value="1586" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="49" />
                                      <option name="offset" value="1586" />
                                      <option name="possibleAnswer" value="SmartMemoryHandler(capacity=2, target=file_handler)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="use our SmartMemoryHandler with same options here" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="smart_memory_handler.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;import logging.handlers&#10;&#10;logger = logging.getLogger('mortgage')&#10;&#10;&#10;class SmartMemoryHandler(logging.handlers.MemoryHandler):&#10;    def shouldFlush(self, record):&#10;        if record.levelno &gt;= self.flushLevel:&#10;            return True&#10;        elif len(self.buffer) &gt;= self.capacity:&#10;            self.buffer = self.buffer[1:]&#10;        return False&#10;&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    result = None&#10;    try:&#10;        mon_rate = get_current_rate(years)/1200&#10;        payments = years * 12&#10;        logger.debug('Number of monthly payments %d', payments)&#10;        result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;        logger.debug('Calculated result is %f', result)&#10;    except:&#10;        logger.exception('caught exception')&#10;&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;&#10;    log_filename = '../../Sandbox/smart_memory_handler.log'&#10;    file_handler = logging.FileHandler(log_filename, mode='w')&#10;&#10;    fmt = logging.Formatter('%(asctime)s %(levelname)s %(message)s')&#10;    file_handler.setFormatter(fmt)&#10;&#10;    # memory_handler = logging.handlers.MemoryHandler(capacity=2, target=file_handler)&#10;&#10;    memory_handler = use our SmartMemoryHandler with same options here&#10;&#10;    root_logger = logging.getLogger()&#10;    root_logger.addHandler(memory_handler)&#10;    root_logger.setLevel(logging.DEBUG)&#10;&#10;    # generate a bunch of debug messages to show they are not written out&#10;    for i in range(1, 100):&#10;        logging.debug('test %d', i)&#10;&#10;    payment = get_monthly_payment(100000, 0)&#10;    print('Monthly payment is %s' % payment)&#10;&#10;    # Remove file handler target to prevent logging.shutdown() from explicitly&#10;    # flushing all handlers, causing any recent DEBUG output to be written&#10;    # to the FileHandler.&#10;    memory_handler.setTarget(None)&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="3" />
                      <option name="name" value="Database Handler" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34308" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="db_handler.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="emit" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="62" />
                                          <option name="offset" value="770" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="62" />
                                      <option name="offset" value="770" />
                                      <option name="possibleAnswer" value="emit" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="insert the method name used by a handler to output log records" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="db_handler.py" />
                                <option name="text" value="from __future__ import print_function&#10;import logging&#10;import logging.config&#10;import datetime&#10;import sqlite3 as sqlite&#10;&#10;&#10;class DatabaseHandler(logging.Handler):&#10;    &quot;&quot;&quot; Store log records in a sqlite database.&#10;    &quot;&quot;&quot;&#10;    def __init__(self, filename):&#10;        super(DatabaseHandler, self).__init__()&#10;        self.db = sqlite.connect(filename)&#10;        try:&#10;            self.db.execute(&#10;                        &quot;CREATE TABLE logger(record_id INTEGER PRIMARY KEY, name TEXT,&quot; \&#10;                        &quot;asctime TEXT, level TEXT, funcName TEXT, lineno INTEGER,&quot; \&#10;                        &quot;module TEXT, message TEXT);&quot;)&#10;            self.db.commit()&#10;&#10;        except sqlite.OperationalError as e:&#10;            logging.info('database filename=%s already exists', filename)&#10;&#10;&#10;    def insert the method name used by a handler to output log records(self, record):&#10;        if self.db:&#10;            timestring = datetime.datetime.utcfromtimestamp(record.created).isoformat() + 'Z'&#10;            message = record.msg % record.args&#10;&#10;            self.acquire()&#10;            try:&#10;                self.db.execute(&quot;INSERT INTO logger(name, asctime, level, funcName, lineno, module, message) &quot; \&#10;                    &quot;VALUES(?, ?, ?, ?, ?, ?, ?);&quot;,&#10;                    (record.name, timestring, record.levelname, record.funcName, record.lineno, record.module, message))&#10;                self.db.commit()&#10;            finally:&#10;                self.release()&#10;&#10;    def close(self):&#10;        self.db.close()&#10;        self.db = None&#10;        super(DatabaseHandler, self).close()&#10;&#10;&#10;if __name__ == '__main__':&#10;    db_filename = '../../Sandbox/log.db'&#10;&#10;    log_config = {&#10;        'version': 1,&#10;        'handlers': {&#10;            'db': {&#10;                'class': 'db_handler.DatabaseHandler',&#10;                'filename': db_filename&#10;            }&#10;        },&#10;        'root': {&#10;            'handlers': ['db'],&#10;            'level': 'DEBUG'&#10;        }&#10;    }&#10;&#10;&#10;    logging.config.dictConfig(log_config)&#10;    logging.debug('Configured logging to database filename=%s', db_filename)&#10;&#10;    logging.warn('root logger warning message')&#10;    logging.debug('Connecting to database to read warning counts')&#10;&#10;    db = sqlite.connect(db_filename)&#10;    result = db.execute('select count(*) from logger where level=&quot;WARNING&quot;')&#10;    print('Number of WARNING log messages in database is %s' % result.fetchone()[0])&#10;&#10;    result = db.execute('select count(*) from logger where level=&quot;DEBUG&quot;')&#10;    print('Number of DEBUG log messages in database is %s' % result.fetchone()[0])&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="4" />
                      <option name="name" value="Injecting data" />
                      <option name="status" value="Unchecked" />
                      <option name="stepicId" value="34309" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="inject_filter.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="filter" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="51" />
                                          <option name="offset" value="171" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="51" />
                                      <option name="offset" value="171" />
                                      <option name="possibleAnswer" value="filter" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter the name of the method used to filter records" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="A non-zero value (1 or True) can be used to allow filter records to be handled.&#10;" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="60" />
                                          <option name="offset" value="309" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="60" />
                                      <option name="offset" value="264" />
                                      <option name="possibleAnswer" value="True" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Unchecked" />
                                      <option name="taskText" value="enter the return value to always allow records to be handled" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="inject_filter.py" />
                                <option name="text" value="import logging&#10;import time&#10;import random&#10;import logging.config&#10;import threading&#10;&#10;class LogUserInjector(logging.Filter):&#10;    thread_local_data = threading.local()&#10;&#10;    def enter the name of the method used to filter records(self, record):&#10;        record.user_id = self.thread_local_data.user_id&#10;        return enter the return value to always allow records to be handled&#10;&#10;    @classmethod&#10;    def set_userid(cls, user_id):&#10;        cls.thread_local_data.user_id = user_id&#10;&#10;&#10;def simulate_user(user_id):&#10;    LogUserInjector.set_userid(user_id)&#10;&#10;    logging.debug('user logged_in')&#10;    time.sleep(random.random())&#10;    logging.debug('user performed some activity')&#10;    time.sleep(random.random())&#10;    logging.debug('user logged_out')&#10;    time.sleep(random.random())&#10;&#10;&#10;if __name__ == '__main__':&#10;&#10;    log_config = {&#10;        'version': 1,&#10;        'formatters': {&#10;            'with_uid': {&#10;                'format': '%(levelname)s - %(asctime)s - %(thread)s UID=%(user_id)d - %(message)s'&#10;            }&#10;        },&#10;        'handlers': {&#10;            'stderr': {&#10;                'class': 'logging.StreamHandler',&#10;                'formatter': 'with_uid',&#10;                'filters': ['uid']&#10;            }&#10;        },&#10;        'filters': {&#10;            'uid': {&#10;                '()': LogUserInjector&#10;            }&#10;        },&#10;        'root': {&#10;            'handlers': ['stderr'],&#10;            'level': 'DEBUG'&#10;        }&#10;    }&#10;&#10;    logging.config.dictConfig(log_config)&#10;&#10;    threads = []&#10;    for user_id in [1, 5, 2, 3]:&#10;        thread = threading.Thread(target=simulate_user, args=(user_id,))&#10;        thread.start()&#10;&#10;    for thread in threads:&#10;        thread.join()&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                  </list>
                </option>
              </Lesson>
              <Lesson>
                <option name="id" value="0" />
                <option name="index" value="8" />
                <option name="name" value="Best Practices" />
                <option name="updateDate" />
                <option name="taskList">
                  <list>
                    <Task>
                      <option name="index" value="1" />
                      <option name="name" value="Logger naming" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34331" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="logger_naming.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="In Python, __name__ contains the current module name." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="38" />
                                          <option name="offset" value="93" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="38" />
                                      <option name="offset" value="93" />
                                      <option name="possibleAnswer" value="__name__" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="specify the name of the current module" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="logger_naming.py" />
                                <option name="text" value="from __future__ import print_function&#10;import math&#10;import logging&#10;&#10;logger = logging.getLogger(specify the name of the current module)&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f', result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;    payment = get_monthly_payment(100000, 30)&#10;    print('Monthly payment is %f' % payment)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="2" />
                      <option name="name" value="Private loggers" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34332" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="private_logger.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="the FirstClass logger name was created with __name__ + '.first_class'&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="32" />
                                          <option name="offset" value="726" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="32" />
                                      <option name="offset" value="726" />
                                      <option name="possibleAnswer" value=".first_class" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="first class logger specific name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="first_logger.setLevel(logging.DEBUG)" />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="30" />
                                          <option name="offset" value="765" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="30" />
                                      <option name="offset" value="745" />
                                      <option name="possibleAnswer" value="first_logger.setLevel(logging.DEBUG)" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="set the logging level to DEBUG" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="private_logger.py" />
                                <option name="text" value="import logging&#10;&#10;logger = logging.getLogger(__name__)&#10;&#10;class FirstClass():&#10;    def __init__(self):&#10;        self.log = logging.getLogger(__name__ + '.first_class')&#10;&#10;    def do_something(self):&#10;        self.log.debug('FirstClass do_something() called')&#10;&#10;&#10;class SecondClass():&#10;    def __init__(self):&#10;        self.log = logging.getLogger(__name__ + '.second_class')&#10;&#10;    def do_something(self):&#10;        self.log.debug('SecondClass do_something() called')&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.WARNING)&#10;&#10;    logger.debug('module scope log output')&#10;&#10;    first = FirstClass()&#10;    first.do_something()&#10;&#10;    second = SecondClass()&#10;    second.do_something()&#10;&#10;    first_logger = logging.getLogger(__name__ + 'first class logger specific name')&#10;    set the logging level to DEBUG&#10;    first.do_something()&#10;    second.do_something()&#10;&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="3" />
                      <option name="name" value="Conditional logging" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34333" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="conditional_logging.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Add an &quot;if&quot; conditional call to isEnabledFor() on the logger object passing in the log level you are about to use.&#10;" />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="54" />
                                          <option name="offset" value="225" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="54" />
                                      <option name="offset" value="225" />
                                      <option name="possibleAnswer" value="if logger.isEnabledFor(logging.DEBUG):" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="insert conditional code to test for this logging level" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="conditional_logging.py" />
                                <option name="text" value="import logging&#10;import time&#10;&#10;logger = logging.getLogger(__name__)&#10;&#10;def calculate_expensive_result(timeout):&#10;    time.sleep(timeout)&#10;    return 1&#10;&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.WARNING)&#10;&#10;    insert conditional code to test for this logging level&#10;        logger.debug('expensive_result=%d', calculate_expensive_result(5))&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="4" />
                      <option name="name" value="Logging in Libraries" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34334" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="library_logging.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Replace the FileHandler with a NullHandler. NullHandler takes no constructor arguments." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="53" />
                                          <option name="offset" value="74" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="53" />
                                      <option name="offset" value="74" />
                                      <option name="possibleAnswer" value="logger.addHandler(logging.NullHandler())" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="logger.addHandler(logging.FileHandler('library.log'))" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="library_logging.py" />
                                <option name="text" value="# mortgage library&#10;#&#10;import logging&#10;&#10;logger = logging.getLogger(__name__)&#10;logger.addHandler(logging.FileHandler('library.log'))&#10;&#10;def get_current_rate(years):&#10;    logger.debug('Fetching current interest rate for %d years', years)&#10;    rate = 5.3   # Stub external service call&#10;    logger.debug('Service returned interest rate %f', rate)&#10;    return rate&#10;&#10;def get_monthly_payment(principal, years):&#10;    logger.info('Calling mortgage calculator')&#10;&#10;    if years &gt; 50:&#10;        logger.warn('Term greater than 50 years')&#10;&#10;    mon_rate = get_current_rate(years)/1200&#10;    payments = years * 12&#10;    logger.debug('Number of monthly payments %d', payments)&#10;    result = principal * (mon_rate/(1-math.pow((1+mon_rate), -payments)))&#10;&#10;    logger.debug('Calculated result is %f', result)&#10;    logger.debug('Leaving mortgage calculator')&#10;    return result" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="5" />
                      <option name="name" value="Using the right levels" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34335" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="right_levels.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Could depend on the application, but first choice would be INFO. Followed by DEBUG if it happens often. Or even WARN if it's an exception but recoverable case." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="16" />
                                          <option name="offset" value="214" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="16" />
                                      <option name="offset" value="214" />
                                      <option name="possibleAnswer" value="INFO" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="enter level name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="If your application can still function without this, or if you can recover, I would mark this as ERROR. But if it's more serious CRITICAL or FATAL." />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="16" />
                                          <option name="offset" value="300" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="16" />
                                      <option name="offset" value="288" />
                                      <option name="possibleAnswer" value="ERROR" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="enter level name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Looks like general INFO, since you might want to know this for more than DEBUG purposes. But, DEBUG could be fine too." />
                                      <option name="index" value="2" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="16" />
                                          <option name="offset" value="408" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="16" />
                                      <option name="offset" value="385" />
                                      <option name="possibleAnswer" value="INFO" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="enter level name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="Whenever the user enters invalid information, I consider this a WARN, since you might need to investigate why the user might have done this, perhaps due to a usability issue. " />
                                      <option name="index" value="3" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="16" />
                                          <option name="offset" value="490" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="16" />
                                      <option name="offset" value="455" />
                                      <option name="possibleAnswer" value="WARN" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="enter level name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="In most application this is so serious you can not continue to function, so this would be CRITICAL or FATAL." />
                                      <option name="index" value="4" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="16" />
                                          <option name="offset" value="606" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="16" />
                                      <option name="offset" value="559" />
                                      <option name="possibleAnswer" value="e__ == '" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="enter level name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="This is a low-level operation, so I would consider it DEBUG." />
                                      <option name="index" value="5" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="16" />
                                          <option name="offset" value="687" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="16" />
                                      <option name="offset" value="632" />
                                      <option name="possibleAnswer" value="e__ =" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="enter level name" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="right_levels.py" />
                                <option name="text" value="import logging&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.DEBUG)&#10;&#10;    user_id = 1001&#10;    ip = '10.0.0.15'&#10;    port = 5555&#10;    account_id = 3551&#10;    version = '1.5.2'&#10;&#10;    logging.log(logging.enter level name, 'Service restarted - version %s', version)&#10;&#10;    logging.log(logging.enter level name, 'Failed to connect to calculator service at ip=%s:%d', ip, port)&#10;&#10;    logging.log(logging.enter level name, 'Created user account id=%d', user_id)&#10;&#10;    logging.log(logging.enter level name, 'User entered invalid account id=%d account_id=%d', user_id, account_id)&#10;&#10;    logging.log(logging.enter level name, 'Could not connect to user database')&#10;&#10;    logging.log(logging.enter level name, 'DB Transaction created for updating user id=%d', user_id)&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="6" />
                      <option name="name" value="Using a decorator" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34336" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="logging_decorator.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="A decorator can be added by specifying the @ character before the decorator function name." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="42" />
                                          <option name="offset" value="354" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="42" />
                                      <option name="offset" value="354" />
                                      <option name="possibleAnswer" value="@logging_decorator" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="add our logging decorator do this function" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="the decorator using the DEBUG level, so we must configure the root handler to include that level." />
                                      <option name="index" value="1" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="61" />
                                          <option name="offset" value="528" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="61" />
                                      <option name="offset" value="504" />
                                      <option name="possibleAnswer" value="level=logging.DEBUG" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="configure the log level to ensure we see the decorator output" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="logging_decorator.py" />
                                <option name="text" value="import logging&#10;import time&#10;import functools&#10;&#10;def logging_decorator(f):&#10;    @functools.wraps(f)&#10;    def wrapper(*args, **kwargs):&#10;        logging.debug('Entering %s', f.__name__)&#10;        start = time.time()&#10;        f(*args, **kwargs)&#10;        end = time.time()&#10;        logging.debug('Exiting %s in %-5.2f secs', f.__name__, end-start)&#10;&#10;    return wrapper&#10;&#10;add our logging decorator do this function&#10;def do_work(timeout):&#10;    # Doing something expensive&#10;    time.sleep(timeout)&#10;&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(configure the log level to ensure we see the decorator output)&#10;    do_work(5)&#10;&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                    <Task>
                      <option name="index" value="7" />
                      <option name="name" value="Just enough context" />
                      <option name="status" value="Solved" />
                      <option name="stepicId" value="34337" />
                      <option name="text" />
                      <option name="updateDate" />
                      <option name="taskFiles">
                        <map>
                          <entry key="context.py">
                            <value>
                              <TaskFile>
                                <option name="answerPlaceholders">
                                  <list>
                                    <AnswerPlaceholder>
                                      <option name="additionalHints">
                                        <list />
                                      </option>
                                      <option name="hint" value="It would be useful to know from which service address the connection was refused from." />
                                      <option name="index" value="0" />
                                      <option name="initialState">
                                        <MyInitialState>
                                          <option name="length" value="37" />
                                          <option name="offset" value="151" />
                                        </MyInitialState>
                                      </option>
                                      <option name="length" value="37" />
                                      <option name="offset" value="151" />
                                      <option name="possibleAnswer" value="service_address" />
                                      <option name="selected" value="false" />
                                      <option name="status" value="Solved" />
                                      <option name="taskText" value="enter a message with relevent context" />
                                      <option name="useLength" value="false" />
                                    </AnswerPlaceholder>
                                  </list>
                                </option>
                                <option name="highlightErrors" value="true" />
                                <option name="index" value="-1" />
                                <option name="trackChanges" value="true" />
                                <option name="userCreated" value="false" />
                                <option name="name" value="context.py" />
                                <option name="text" value="import logging&#10;&#10;def do_service_lookup(service_address):&#10;    try:&#10;        raise Exception('Connection refused.')&#10;&#10;    except:&#10;        logging.exception(enter a message with relevent context)&#10;&#10;if __name__ == '__main__':&#10;    logging.basicConfig(level=logging.INFO)&#10;&#10;    do_service_lookup('10.0.0.15')&#10;" />
                              </TaskFile>
                            </value>
                          </entry>
                        </map>
                      </option>
                    </Task>
                  </list>
                </option>
              </Lesson>
            </list>
          </option>
          <option name="name" value="Logging in Python" />
          <option name="updateDate" />
        </Course>
      </option>
      <option name="enableTestingFromSamples" value="true" />
      <option name="toolWindowMode" value="TEXT" />
      <option name="turnEditingMode" value="false" />
      <option name="user">
        <StepicUser>
          <option name="email" value="" />
          <option name="firstName" value="" />
          <option name="id" value="0" />
          <option name="lastName" value="" />
        </StepicUser>
      </option>
      <option name="VERSION" value="3" />
      <option name="myUserTests">
        <map />
      </option>
      <option name="myInvisibleFiles">
        <list />
      </option>
      <option name="myShouldUseJavaFx" value="true" />
    </StudyTaskManager>
  </component>
</project>