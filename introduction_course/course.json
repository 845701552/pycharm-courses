{
  "lessons": [
    {
      "name": "Introduction",
      "task_list": [
        {
          "name": "Our first program",
          "task_files": {
            "hello_world.py": {
              "task_windows": [
                {
                  "line": 0,
                  "start": 32,
                  "hint": "lesson1.task1.docs",
                  "possible_answer": "Liana",
                  "length": 14
                }
              ]
            }
          }
        },
        {
          "name": "Comments",
          "task_files": {
            "comments.py": {
              "task_windows": [
                {
                  "line": 4,
                  "start": 2,
                  "hint": "lesson1.task2.docs",
                  "possible_answer": "new comment",
                  "length": 20
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Variables",
      "task_list": [
        {
          "name": "Variable definition",
          "task_files": {
            "variable_definition.py": {
              "task_windows": [
                {
                  "line": 6,
                  "start": 12,
                  "hint": "lesson2.task1.docs",
                  "possible_answer": "5",
                  "length": 13
                }
              ]
            }
          }
        },
        {
          "name": "Undefined variable",
          "task_files": {
            "undefined_variable.py": {
              "task_windows": [
                {
                  "line": 1,
                  "start": 6,
                  "hint": "lesson2.task2.docs",
                  "possible_answer": "other_variable",
                  "length": 14
                }
              ]
            }
          }
        },
        {
          "name": "Variable types",
          "task_files": {
            "variable_type.py": {
              "task_windows": [
                {
                  "line": 4,
                  "start": 6,
                  "hint": "lesson2.task3.docs",
                  "possible_answer": "type(float_number)",
                  "length": 17
                }
              ]
            }
          }
        },
        {
          "name": "Type conversion",
          "task_files": {
            "type_cast.py": {
              "task_windows": [
                {
                  "line": 5,
                  "start": 6,
                  "hint": "lesson2.task4.docs",
                  "possible_answer": "int(float_number)",
                  "length": 31
                }
              ]
            }
          }
        },
        {
          "name": "Arithmetic operators",
          "task_files": {
            "arithmetic_operators.py": {
              "task_windows": [
                {
                  "line": 2,
                  "start": 9,
                  "hint": "lesson2.task5.1.docs",
                  "possible_answer": "number/2",
                  "length": 22
                },
                {
                  "line": 4,
                  "start": 12,
                  "hint": "lesson2.task5.2.docs",
                  "possible_answer": "number%2",
                  "length": 23
                }
              ]
            }
          }
        },
        {
          "name": "Assignments",
          "task_files": {
            "assignments.py": {
              "task_windows": [
                {
                  "line": 6,
                  "start": 7,
                  "hint": "lesson2.task6.docs",
                  "possible_answer": "+\u003d",
                  "length": 8
                }
              ]
            }
          }
        },
        {
          "name": "Boolean operators",
          "task_files": {
            "boolean_operators.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 15,
                  "hint": "lesson2.task7.docs",
                  "possible_answer": "\u003d\u003d",
                  "length": 8
                }
              ]
            }
          }
        },
        {
          "name": "Comparison operators",
          "task_files": {
            "comparison_operators.py": {
              "task_windows": [
                {
                  "line": 6,
                  "start": 19,
                  "hint": "lesson2.task8.docs",
                  "possible_answer": "\u003e\u003d",
                  "length": 8
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Strings",
      "task_list": [
        {
          "name": "Concatenation",
          "task_files": {
            "concatenation.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 14,
                  "hint": "lesson3.task1.docs",
                  "possible_answer": "hello + \u0027 \u0027 + world",
                  "length": 9
                }
              ]
            }
          }
        },
        {
          "name": "String multiplication",
          "task_files": {
            "string_multiplication.py": {
              "task_windows": [
                {
                  "line": 1,
                  "start": 22,
                  "hint": "lesson3.task2.docs",
                  "possible_answer": "*",
                  "length": 8
                }
              ]
            }
          }
        },
        {
          "name": "String indexing",
          "task_files": {
            "string_indexing.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 11,
                  "hint": "lesson3.task3.docs",
                  "possible_answer": "python[0]",
                  "length": 9
                }
              ]
            }
          }
        },
        {
          "name": "String negative indexing",
          "task_files": {
            "negative_indexing.py": {
              "task_windows": [
                {
                  "line": 1,
                  "start": 14,
                  "hint": "lesson3.task4.docs",
                  "possible_answer": "long_string[-1]",
                  "length": 9
                }
              ]
            }
          }
        },
        {
          "name": "String slicing",
          "task_files": {
            "slicing.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 9,
                  "hint": "lesson3.task5.docs",
                  "possible_answer": "monty_python[6:]",
                  "length": 9
                }
              ]
            }
          }
        },
        {
          "name": "In operator",
          "task_files": {
            "in_operator.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 11,
                  "hint": "lesson3.task6.docs",
                  "possible_answer": "\u0027ice\u0027 in ice_cream",
                  "length": 9
                }
              ]
            }
          }
        },
        {
          "name": "String length",
          "task_files": {
            "len_function.py": {
              "task_windows": [
                {
                  "line": 5,
                  "start": 13,
                  "hint": "lesson3.task7.docs",
                  "possible_answer": "phrase[:len(phrase)/2]",
                  "length": 9
                }
              ]
            }
          }
        },
        {
          "name": "Character escaping",
          "task_files": {
            "character_escaping.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 7,
                  "hint": "lesson3.task8.docs",
                  "possible_answer": "The name of this ice-cream is \"Sweeet\\\u0027n\\\u0027Tasty\"",
                  "length": 4
                }
              ]
            }
          }
        },
        {
          "name": "Basic string methods",
          "task_files": {
            "string_methods.py": {
              "task_windows": [
                {
                  "line": 5,
                  "start": 6,
                  "hint": "lesson3.task9.docs",
                  "possible_answer": "monty_python.upper()",
                  "length": 24
                }
              ]
            }
          }
        },
        {
          "name": "String formatting",
          "task_files": {
            "string_formatting.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 11,
                  "hint": "lesson3.task10.1.docs",
                  "possible_answer": "%d",
                  "length": 14
                },
                {
                  "line": 3,
                  "start": 39,
                  "hint": "lesson3.task10.2.docs",
                  "possible_answer": "17",
                  "length": 5
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Data structures",
      "task_list": [
        {
          "name": "Lists introduction",
          "task_files": {
            "lists.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 6,
                  "hint": "lesson4.task1.docs",
                  "possible_answer": "squares[1:4]",
                  "length": 5
                }
              ]
            }
          }
        },
        {
          "name": "Lists operations",
          "task_files": {
            "list_operations.py": {
              "task_windows": [
                {
                  "line": 9,
                  "start": 0,
                  "hint": "lesson4.task2.docs",
                  "possible_answer": "animals[-1] \u003d \u0027dinosaur\u0027",
                  "length": 30
                }
              ]
            }
          }
        },
        {
          "name": "List items",
          "task_files": {
            "list_items.py": {
              "task_windows": [
                {
                  "line": 9,
                  "start": 0,
                  "hint": "lesson4.task3.docs",
                  "possible_answer": "animals[:] \u003d []",
                  "length": 10
                }
              ]
            }
          }
        },
        {
          "name": "Tuples",
          "task_files": {
            "tuples.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 6,
                  "hint": "lesson4.task4.docs",
                  "possible_answer": "len(alphabet)",
                  "length": 15
                }
              ]
            }
          }
        },
        {
          "name": "Dictionaries",
          "task_files": {
            "dicts.py": {
              "task_windows": [
                {
                  "line": 11,
                  "start": 6,
                  "hint": "lesson4.task5.docs",
                  "possible_answer": "phone_book[\u0027Jane\u0027]",
                  "length": 12
                }
              ]
            }
          }
        },
        {
          "name": "Dictionary keys() and values()",
          "task_files": {
            "dict_key_value.py": {
              "task_windows": [
                {
                  "line": 9,
                  "start": 6,
                  "hint": "lesson4.task6.docs",
                  "possible_answer": "phone_book.values()",
                  "length": 17
                }
              ]
            }
          }
        },
        {
          "name": "In keyword",
          "task_files": {
            "in_keyword.py": {
              "task_windows": [
                {
                  "line": 6,
                  "start": 6,
                  "hint": "lesson4.task7.docs",
                  "possible_answer": "\u0027fish\u0027 in grocery_dict.keys()",
                  "length": 30
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Condition expressions",
      "task_list": [
        {
          "name": "Boolean operators",
          "task_files": {
            "boolean_operators.py": {
              "task_windows": [
                {
                  "line": 5,
                  "start": 6,
                  "hint": "lesson5.task1.docs",
                  "possible_answer": "name \u003d\u003d \u0027John\u0027 and age !\u003d 23",
                  "length": 24
                }
              ]
            }
          }
        },
        {
          "name": "Boolean operators order",
          "task_files": {
            "boolean_order.py": {
              "task_windows": [
                {
                  "line": 5,
                  "start": 6,
                  "hint": "lesson5.task2.docs",
                  "possible_answer": "name \u003d\u003d \u0027Ellis\u0027 or not(name \u003d\u003d \u0027John\u0027 and years \u003d\u003d 17)",
                  "length": 69
                }
              ]
            }
          }
        },
        {
          "name": "If statement",
          "task_files": {
            "if_statement.py": {
              "task_windows": [
                {
                  "line": 9,
                  "start": 0,
                  "hint": "lesson5.task3.docs",
                  "possible_answer": "if len(tasks) \u003d\u003d 0:",
                  "length": 25
                }
              ]
            }
          }
        },
        {
          "name": "Else, elif part in if statement",
          "task_files": {
            "else_elif.py": {
              "task_windows": [
                {
                  "line": 13,
                  "start": 0,
                  "hint": "lesson5.task4.1.docs",
                  "possible_answer": "if name \u003d\u003d \u0027John\u0027:",
                  "length": 29
                },
                {
                  "line": 15,
                  "start": 0,
                  "hint": "lesson5.task4.2.docs",
                  "possible_answer": "else:",
                  "length": 9
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Loops",
      "task_list": [
        {
          "name": "For loop",
          "task_files": {
            "for_loop.py": {
              "task_windows": [
                {
                  "line": 6,
                  "start": 0,
                  "hint": "lesson6.task1.docs",
                  "possible_answer": "for prime in primes:",
                  "length": 34
                }
              ]
            }
          }
        },
        {
          "name": "For loop using string",
          "task_files": {
            "for_string.py": {
              "task_windows": [
                {
                  "line": 7,
                  "start": 0,
                  "hint": "lesson6.task2.docs",
                  "possible_answer": "for ch in hello_world:",
                  "length": 59
                }
              ]
            }
          }
        },
        {
          "name": "While loop",
          "task_files": {
            "while_loop.py": {
              "task_windows": [
                {
                  "line": 11,
                  "start": 0,
                  "hint": "lesson6.task3.docs",
                  "possible_answer": "while number \u003c 10:",
                  "length": 30
                }
              ]
            }
          }
        },
        {
          "name": "Break keyword",
          "task_files": {
            "break_keyword.py": {
              "task_windows": [
                {
                  "line": 13,
                  "start": 7,
                  "hint": "lesson6.task4.docs",
                  "possible_answer": "animal \u003d\u003d \u0027elephant\u0027",
                  "length": 33
                }
              ]
            }
          }
        },
        {
          "name": "Continue keyword",
          "task_files": {
            "continue_keyword.py": {
              "task_windows": [
                {
                  "line": 6,
                  "start": 7,
                  "hint": "lesson6.task5.docs",
                  "possible_answer": "x % 2 \u003d\u003d 0",
                  "length": 18
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Functions",
      "task_list": [
        {
          "name": "Definition",
          "task_files": {
            "functions.py": {
              "task_windows": [
                {
                  "line": 11,
                  "start": 0,
                  "hint": "lesson7.task1.docs",
                  "possible_answer": "def fun():",
                  "length": 58
                }
              ]
            }
          }
        },
        {
          "name": "Parameters and call arguments",
          "task_files": {
            "param_args.py": {
              "task_windows": [
                {
                  "line": 5,
                  "start": 0,
                  "hint": "lesson7.task2.docs",
                  "possible_answer": "def square(x):",
                  "length": 71
                }
              ]
            }
          }
        },
        {
          "name": "Return value",
          "task_files": {
            "return_keyword.py": {
              "task_windows": [
                {
                  "line": 11,
                  "start": 8,
                  "hint": "lesson7.task3.1.docs",
                  "possible_answer": "1",
                  "length": 21
                },
                {
                  "line": 15,
                  "start": 8,
                  "hint": "lesson7.task3.2.docs",
                  "possible_answer": "b \u003d a + b",
                  "length": 17
                },
                {
                  "line": 16,
                  "start": 8,
                  "hint": "lesson7.task3.3.docs",
                  "possible_answer": "a \u003d tmp_var",
                  "length": 17
                }
              ]
            }
          }
        },
        {
          "name": "Default parameters",
          "task_files": {
            "default_parameter.py": {
              "task_windows": [
                {
                  "line": 7,
                  "start": 10,
                  "hint": "lesson7.task4.docs",
                  "possible_answer": "subject, name\u003d\u0027John\u0027",
                  "length": 55
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Classes and objects",
      "task_list": [
        {
          "name": "Definition",
          "task_files": {
            "class_definition.py": {
              "task_windows": [
                {
                  "line": 1,
                  "start": 15,
                  "hint": "lesson8.task1.docs",
                  "possible_answer": "4",
                  "length": 28
                }
              ]
            }
          }
        },
        {
          "name": "Variable access",
          "task_files": {
            "access_variable.py": {
              "task_windows": [
                {
                  "line": 17,
                  "start": 6,
                  "hint": "lesson8.task2.docs",
                  "possible_answer": "my_object.variable1",
                  "length": 33
                }
              ]
            }
          }
        },
        {
          "name": "Variable access",
          "task_files": {
            "access_variable.py": {
              "task_windows": [
                {
                  "line": 7,
                  "start": 7,
                  "hint": "lesson8.task3.1.docs",
                  "possible_answer": "Car()",
                  "length": 20
                },
                {
                  "line": 10,
                  "start": 0,
                  "hint": "lesson8.task3.2.docs",
                  "possible_answer": "car2.color \u003d \u0027blue\u0027",
                  "length": 14
                }
              ]
            }
          }
        },
        {
          "name": "Self explanation",
          "task_files": {
            "self_parameter.py": {
              "task_windows": [
                {
                  "line": 9,
                  "start": 8,
                  "hint": "lesson8.task4.docs",
                  "possible_answer": "self.current +\u003d amount",
                  "length": 21
                }
              ]
            }
          }
        },
        {
          "name": "Special __init__ method",
          "task_files": {
            "init_method.py": {
              "task_windows": [
                {
                  "line": 9,
                  "start": 17,
                  "hint": "lesson8.task5.docs",
                  "possible_answer": "self, color",
                  "length": 19
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Modules and packages",
      "task_list": [
        {
          "name": "Import module",
          "task_files": {
            "imports.py": {
              "task_windows": [
                {
                  "line": 7,
                  "start": 0,
                  "hint": "lesson9.task1.1.docs",
                  "possible_answer": "import my_module",
                  "length": 21
                },
                {
                  "line": 9,
                  "start": 0,
                  "hint": "lesson9.task1.2.docs",
                  "possible_answer": "my_module.hello_world(\u0027John\u0027)",
                  "length": 40
                }
              ]
            },
            "my_module.py": {
              "task_windows": []
            },
            "calculator.py": {
              "task_windows": []
            }
          }
        },
        {
          "name": "Builtin modules",
          "task_files": {
            "builtin_modules.py": {
              "task_windows": [
                {
                  "line": 2,
                  "start": 6,
                  "hint": "lesson9.task2.docs",
                  "possible_answer": "datetime.datetime.today()",
                  "length": 12
                }
              ]
            }
          }
        },
        {
          "name": "From import",
          "task_files": {
            "from_import.py": {
              "task_windows": [
                {
                  "line": 7,
                  "start": 0,
                  "hint": "lesson9.task3.docs",
                  "possible_answer": "from my_module import hello_world",
                  "length": 33
                }
              ]
            },
            "my_module.py": {
              "task_windows": []
            },
            "calculator.py": {
              "task_windows": []
            }
          }
        }
      ]
    },
    {
      "name": "File input/output",
      "task_list": [
        {
          "name": "Read file",
          "task_files": {
            "read_file.py": {
              "task_windows": [
                {
                  "line": 5,
                  "start": 4,
                  "hint": "lesson10.task1.1.docs",
                  "possible_answer": "print(line)",
                  "length": 15
                },
                {
                  "line": 11,
                  "start": 0,
                  "hint": "lesson10.task1.2.docs",
                  "possible_answer": "print(f1.readline())",
                  "length": 27
                },
                {
                  "line": 13,
                  "start": 0,
                  "hint": "lesson10.task1.2.docs",
                  "possible_answer": "f1.close()",
                  "length": 27
                }
              ]
            },
            "input1.txt": {
              "task_windows": []
            },
            "input.txt": {
              "task_windows": []
            }
          }
        },
        {
          "name": "Write to file",
          "task_files": {
            "write_to_file.py": {
              "task_windows": [
                {
                  "line": 3,
                  "start": 27,
                  "hint": "lesson10.task2.1.docs",
                  "possible_answer": "\u0027a\u0027",
                  "length": 12
                },
                {
                  "line": 6,
                  "start": 8,
                  "hint": "lesson10.task2.2.docs",
                  "possible_answer": "f.write(i)",
                  "length": 35
                },
                {
                  "line": 8,
                  "start": 4,
                  "hint": "lesson10.task2.3.docs",
                  "possible_answer": "f.close()",
                  "length": 14
                }
              ]
            },
            "output.txt": {
              "task_windows": []
            }
          }
        }
      ]
    }
  ],
  "description": "Introduction course to Python",
  "name": "Introduction to Python",
  "author": "PyCharm"
}